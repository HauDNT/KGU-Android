CREATE TABLE IF NOT EXISTS users (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	username VARCHAR(16) UNIQUE NOT NULL,
	password VARCHAR(255) NOT NULL,
	fullname VARCHAR(255) UNIQUE,
	email VARCHAR(255),
	phone_number VARCHAR(15),
	address VARCHAR(255),
	is_admin INTEGER NOT NULL,
	created_at DEFAULT CURRENT_TIMESTAMP,
	updated_at DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS foods (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	name NVARCHAR(255) NOT NULL,
	description TEXT,
	price REAL NOT NULL,
	status INTEGER NOT NULL,
	image_url TEXT,
	created_at DEFAULT CURRENT_TIMESTAMP,
	updated_at DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS categories (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	name NVARCHAR(255) NOT NULL,
	created_at DEFAULT CURRENT_TIMESTAMP,
	updated_at DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS food_category (
	food_id INTEGER,
	category_id INTEGER,
	created_at DEFAULT CURRENT_TIMESTAMP,
	updated_at DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (food_id, category_id),
	FOREIGN KEY (food_id) REFERENCES foods(id),
	FOREIGN KEY (category_id) REFERENCES categories(id)
);

CREATE TABLE IF NOT EXISTS orders (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	status INTEGER NOT NULL,
	description TEXT,
	delivery_at DEFAULT CURRENT_TIMESTAMP,
	created_at DEFAULT CURRENT_TIMESTAMP,
	updated_at DEFAULT CURRENT_TIMESTAMP,
	user_id INTEGER,
	FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE IF NOT EXISTS order_item (
	id INTEGER PRIMARY KEY AUTOINCREMENT,
	order_id INTEGER,
	food_id INTEGER,
	quantity INTEGER NOT NULL,
	total_price REAL NOT NULL,
	FOREIGN KEY (food_id) REFERENCES foods(id),
	FOREIGN KEY (order_id) REFERENCES orders(id)
);

